name: Android CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
  workflow_dispatch:

jobs:
  build-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        build-type: [ debug, release ]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with: { distribution: 'temurin', java-version: '17' }
      - name: Gradle cache
        uses: gradle/gradle-build-action@v3
        with:
          cache-read-only: ${{ github.ref != 'refs/heads/main' }}
      - name: Assemble
        run: ./gradlew :app:assemble${{ matrix.build-type^ }}
      - name: Lint & Unit tests
        run: ./gradlew lint test
      - name: Upload APK/AAB
        uses: actions/upload-artifact@v4
        with:
          name: app-${{ matrix.build-type }}
          path: |
            app/build/outputs/apk/${{ matrix.build-type }}/*.apk
            app/build/outputs/bundle/${{ matrix.build-type }}/*.aab
          retention-days: 30

  security-scan:
    if: github.ref == 'refs/heads/main'
    needs: build-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

  distribute-internal:
    if: github.ref == 'refs/heads/main'
    needs: build-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with: { distribution: 'temurin', java-version: '17' }
      - name: Gradle cache
        uses: gradle/gradle-build-action@v3
      - name: Decrypt service account
        run: |
          echo "${{ secrets.FIREBASE_SERVICE_ACCOUNT_JSON }}" > service_account.json
      - name: Build Release AAB
        run: ./gradlew :app:bundleRelease
      - name: Firebase App Distribution
        run: |
          ./gradlew appDistributionUploadRelease \
            -PFIREBASE_APP_ID=${{ secrets.FIREBASE_APP_ID }} \
            -PFIREBASE_TOKEN=${{ secrets.FIREBASE_TOKEN }}

  emulator-smoke-test:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with: { distribution: 'temurin', java-version: '17' }
      - name: Gradle cache
        uses: gradle/gradle-build-action@v3
        with:
          cache-read-only: ${{ github.ref != 'refs/heads/main' }}
      - name: Build Debug APK
        run: ./gradlew :app:assembleDebug
      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
      - name: Create AVD
        run: |
          echo "y" | $ANDROID_HOME/cmdline-tools/latest/bin/avdmanager create avd \
            -n test -k "system-images;android-34;google_apis;x86_64" --force
      - name: Start emulator
        run: |
          $ANDROID_HOME/emulator/emulator -avd test -no-audio -no-window &
          $ANDROID_HOME/platform-tools/adb wait-for-device
      - name: Install APK
        run: $ANDROID_HOME/platform-tools/adb install app/build/outputs/apk/debug/*.apk
      - name: Test orchestration broadcast
        run: |
          $ANDROID_HOME/platform-tools/adb shell am broadcast \
            -n com.mira.com/.orch.OrchestrationReceiver \
            -a com.mira.clip.ORCHESTRATE \
            --es manifest_uri "file:///sdcard/test.json"
      - name: Test debug CLIP broadcast
        run: |
          $ANDROID_HOME/platform-tools/adb shell am broadcast \
            -n com.mira.com/.feature.clip.debug.DebugClipReceiver \
            -a com.mira.clip.CLIP.RUN \
            --es manifest_uri "file:///sdcard/test.json"